{"version":3,"sources":["routes/CreateRoom.js","routes/Room.js","components/NavBar.js","App.js","index.js"],"names":["CreateRoom","props","nameInput","cardStyles","p","boxShadow","borderRadius","useState","name","setName","useEffect","storage","setItem","textAlign","display","sx","border","borderBottom","outline","transition","boxSizing","width","defaultValue","placeholder","onChange","e","target","value","ref","input","fontWeight","px","py","color","mt","pt","pb","href","onClick","focus","id","uuid","history","push","Container","styled","div","StyledVideo","video","Video","useRef","peer","on","stream","current","srcObject","playsInline","autoPlay","videoConstraints","height","window","innerHeight","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","io","connect","process","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","console","log","peerID","payload","find","incomingSignal","addPeer","muted","map","index","key","NavBar","useColorMode","colorMode","setColorMode","linkProps","alignItems","homeLink","lightness","saturation","mx","App","state","getInitialState","getItem","theme","tosh","this","children","path","exact","render","component","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cb2e4f8d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport { Box, Heading, Flex, Card, Link } from 'rebass';\nimport { Input } from '@rebass/forms';\nimport { FaPencilAlt } from 'react-icons/fa';\nimport { RiShareBoxLine } from 'react-icons/ri';\nimport storage from 'local-storage-fallback';\n\nexport default function CreateRoom (props) {\n\n    const inputStyles = {\n        border: 0,\n        borderBottom: '2px solid',\n        outline: 'none',\n        transition: '.2s ease-in-out',\n        boxSizing: 'border-box',\n    }\n\n    const cardStyles = {\n        p: 2,\n        boxShadow: '0 0 4px rgba(145, 145, 145, .500)',\n        borderRadius: '10px',\n    };\n\n    const linkStyles = { display: 'inline-block', fontWeight: 'bold', px: 2, py: 1, color: 'inherit', mt:1, p:2, pt:2, pb:1 };\n\n    const [name, setName] = useState(props.name); \n    \n    var nameInput;\n\n    useEffect(() => {\n        storage.setItem('userName', name);\n    });\n\n    const create = () => {\n        const id = uuid();\n        props.history.push(`/room/${id}`);\n    }   \n\n    return (\n        <Box p={4} textAlign='center'>\n            \n            <Heading> Olá,\n                <Input name='name' display='inline' sx={inputStyles} width={1/8} defaultValue={name} placeholder='seu nome, queridx' \n                    onChange={ e => setName(e.target.value) }\n                    ref={(input) => { nameInput = input; }}\n                />\n                <Link sx={linkStyles} href='#'><FaPencilAlt onClick={ e => nameInput.focus()}/></Link> \n            </Heading>\n\n            <Flex p={4}>\n                <Box width={1/4}></Box>\n                <Card width={1/2} sx={cardStyles} p={4}>\n                    <Heading>Horus é um app de vídeo conferências instantâneas.</Heading>\n                    <Heading>Para utilizar é simples, basta criar uma nova sala e enviar o link para seus convidados!</Heading>\n                </Card>\n                <Box width={1/4}></Box>\n            </Flex>\n\n            <Flex>\n                <Box width={1/2} p={3}>\n                    <Card sx={cardStyles}>\n                        <Link onClick={create}> <RiShareBoxLine /></Link>\n                        <Heading>Criar nova sala</Heading>\n                    </Card>\n                </Box>\n\n                <Box width={1/2} p={3}>\n                    <Card sx={cardStyles}>\n                    <Link> <RiShareBoxLine /></Link>\n                        <Heading>Entrar em sala já existente</Heading>\n                    </Card>\n                </Box>\n            </Flex>\n        </Box>\n    );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    padding: 20px;\n    display: flex;\n    height: 100vh;\n    width: 90%;\n    margin: auto;\n    flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n    height: 40%;\n    width: 50%;\n`;\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <StyledVideo playsInline autoPlay ref={ref} />\n    );\n}\n\n\nconst videoConstraints = {\n    height: window.innerHeight / 2,\n    width: window.innerWidth / 2\n};\n\nconst Room = (props) => {\n    const [peers, setPeers] = useState([]);\n    const socketRef = useRef();\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n    const roomID = props.match.params.roomID;\n\n    useEffect(() => {\n        socketRef.current = io.connect(process.env.REACT_APP_SERVER_URL);\n        \n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            socketRef.current.emit(\"join room\", roomID);\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socketRef.current.id, stream);\n                    console.log(peer);\n                    \n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    peers.push(peer);\n                })\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.callerID);\n                \n                if (!item) {\n                    const peer = addPeer(payload.signal, payload.callerID, stream);\n                    peersRef.current.push({\n                        peerID: payload.callerID,\n                        peer,\n                    });\n                    setPeers(users => [...users, peer]);\n                }\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    return (\n        <Container>\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\n            {peers.map((peer, index) => {\n                return (\n                    <Video key={index} peer={peer} />\n                );\n            })}\n        </Container>\n    );\n};\n\nexport default Room;\n","import React from 'react';\nimport { Flex, Text, Box, Button, Link } from 'rebass';\nimport { GiPaintBucket, GiBrazil } from 'react-icons/gi';\nimport RainbowText from 'react-rainbow-text';\nimport { useColorMode } from 'theme-ui'\nimport { AiFillGithub } from 'react-icons/ai';\n\nexport default function NavBar (props) {\n\n    const [colorMode, setColorMode] = useColorMode();\n\n    const textProps = { fontWeight:'bold', textAlign:'center' };\n    const linkProps = { display: 'inline-block', fontWeight: 'bold', px: 2, py: 1, color: 'inherit', mt:1, p:2, pt:2, pb:1 };\n\n    return (\n        <Flex px={2} alignItems='center'>\n            <Box width={1/3}>\n                <Link sx={linkProps} href={props.homeLink} fontWeight='bold'>Horus</Link>\n            </Box>\n            <Box width={1/3}>\n                <Text sx={{ p:2, ...textProps}}> \n                    <RainbowText lightness={0.5} saturation={1}> Feito com amor no Brasil </RainbowText><> </><GiBrazil />\n                </Text>\n            </Box>\n            <Box mx='auto' />\n            <Link href='https://github.com/carlosmds/horus' target='_blank' sx={linkProps}>\n                Abrir no GitHub <AiFillGithub />\n            </Link>\n            <Link href='#' sx={linkProps} onClick={e => { setColorMode(colorMode === 'default' ? 'dark' : 'default') }}>\n                Tema {colorMode === 'default' ? 'escuro' : 'claro'} <GiPaintBucket />\n            </Link>\n        </Flex>\n    );  \n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./routes/CreateRoom\";\nimport Room from \"./routes/Room\";\nimport NavBar from \"./components/NavBar\";\nimport { ThemeProvider } from 'theme-ui';\nimport { tosh } from '@theme-ui/presets';\nimport storage from 'local-storage-fallback';\n\nconst homeLink = process.env.REACT_APP_URL;\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n\n  getInitialState() {\n    return {\n      name: storage.getItem('userName') || ''\n    }\n  }\n  \n  render() {\n\n    return(\n      <ThemeProvider theme={tosh}>\n        {this.props.children}\n        <NavBar homeLink={homeLink}/>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact render={(props) => ( <CreateRoom {...props} name={this.state.name} /> )}/>\n            <Route path=\"/room/:roomID\" component={Room} />\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    );\n    \n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}